import gradle.build.custom.Version

import java.nio.charset.StandardCharsets

buildscript {
    repositories {
        // https://repo.maven.apache.org/maven2
        mavenCentral()
    }

    dependencies {
        // Dynamic (or legacy) application of gradle plugin.
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$Version.SPRING_BOOT"
    }
}

plugins {
    id 'java'
    // Replaced with "buildscript.dependencies.classpath".
//    id 'org.springframework.boot' version '2.6.8'
//    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'idea' // optional (to generate IntelliJ IDEA project files)
    id 'eclipse' // optional (to generate Eclipse project files)
}

allprojects {
    group = 'io.github.imsejin.study.springframework'
    version = '0.1.0'
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    [compileJava, compileTestJava]*.options*.encoding = StandardCharsets.UTF_8

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    // apply plugin: 'idea'
    // apply plugin: 'eclipse'

    repositories {
//        mavenLocal()
        mavenCentral()
    }
}

subprojects {
    dependencies {
//        implementation rootProject // All sub projects will import root project.
        implementation "org.reflections:reflections:$Version.REFLECTIONS"

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testCompileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'

        /*
        spring-boot v2.3 이후로 "spring-boot-starter-web", "spring-boot-starter-webflux"가
        "spring-boot-starter-validation"를 포함하지 않는다.
        (https://www.youtube.com/watch?v=cP8TwMV4LjE&t=70s)
         */
        implementation 'org.springframework.boot:spring-boot-starter-validation'

        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }

    test {
        useJUnitPlatform()
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    // To solve build failure (or you can disable kotlin plugin built in IntelliJ IDEA).
    // The following message is from that error.
    //
    // Task 'prepareKotlinBuildScriptModel' not found in project '?'.
    //
    // This task has nothing to do with the fact that your project doesn't have Kotlin sources.
    // It's about supporting the edition of .gradle.kts scripts in the IDE.
    // The fact that you have such scripts or not can't be detected upfront.
    // This task needs to run always. When you have no .gradle.kts scripts it's doesn't do anything.
    // (ref. https://github.com/gradle/gradle/issues/14889)
    tasks.register 'prepareKotlinBuildScriptModel'
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}
